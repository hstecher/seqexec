#
#  Run Seqexec locally in docker
#
#  -- on host --
#  docker build -t registry.gitlab.com/nsf-noirlab/gemini/rtsw/user-tools/seqexec-tester/seqexec-prod -f Dockerfile.prod ../
#  
#  -- copy tarball to host --
#  docker run --rm -v $(pwd)/output:/output registry.gitlab.com/nsf-noirlab/gemini/rtsw/user-tools/seqexec-tester/seqexec-prod sh -c "cp /seqexec/app/seqexec-server-gn/target/universal/*.tgz /output/"
#
#  -- run container --
#  docker run --rm -it --name webseq-container -p 9091:9091 -p 9090:9090 registry.gitlab.com/nsf-noirlab/gemini/rtsw/user-tools/seqexec-tester/seqexec-prod bash -l
#
#  -- in container --
#  cd /seqexec/app/seqexec-server-gn/target/universal/app_seqexec_server_gn-<date...>/
#  vi conf/app.conf [customize config]
#  ./bin/seqexec-server
#
# -- in browser on host --
#  http://localhost:9090/ 
#  login: telops
#  password: pwd
#
#

FROM registry.gitlab.com/nsf-noirlab/gemini/rtsw/user-tools/seqexec-tester/seqexec-base

# Set environment variables
ENV SBT_OPTS="-Xmx2048m -Xms1024m -Xss2M"

# Copy the application directory
COPY . /seqexec

# Set working directory
WORKDIR /seqexec

# Compile, stage, and package the Scala application
RUN sbt clean 
RUN sbt app_seqexec_server_gn/compile 
RUN sbt app_seqexec_server_gn/stage 
RUN sbt app_seqexec_server_gn/universal:packageZipTarball

# Extract the tarball, include the JRE, and set the working directory
RUN cd /seqexec/app/seqexec-server-gn/target/universal/ && \
    tar -xvf *.tgz && \
    TAR_DIR=$(ls -d app_seqexec_server_gn-*/ | head -n 1 | tr -d '/') && \
    mkdir "$TAR_DIR" && \
    mv * "$TAR_DIR"/ || true && \
    cd "$TAR_DIR" && \
    apt-get update && \
    apt-get install -y openjdk-17-jdk && \
    cp -r /usr/lib/jvm/java-17-openjdk-amd64 ./jre && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    cd .. && \
    tar -cvzf "$TAR_DIR".tgz "$TAR_DIR" && \
    echo "export SEQEXEC_DIR=/seqexec/app/seqexec-server-gn/target/universal/$TAR_DIR" >> /etc/environment

# Set the working directory for subsequent commands
WORKDIR ${SEQEXEC_DIR}

# Optionally, set the start script as the entrypoint
# ENTRYPOINT ["/start-seqexec.sh"]
